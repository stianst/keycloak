name: Labeler
on: 
  pull_request_target:
    types: closed

jobs:
  label:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write

    steps:
    - uses: actions/checkout@v4
      with:
        sparse-checkout: .github/scripts
    - run: |
        echo "Repository: ${{ github.event.pull_request.number }}"
        echo "Event: ${{ github.event_name }}"
        echo "Action: ${{ github.event.action }}"
        echo "Merged: ${{ github.event.pull_request.merged }}"
        echo "Base REF: ${{ github.base_ref }}"

        PR_NUMBER="${{ github.event.pull_request.number }}"

        echo "Repository: $GITHUB_REPOSITORY"
        echo "Base REF:   $GITHUB_BASE_REF
        echo "PR:         $PR_NUMBER"

        if [ "$GITHUB_BASE_REF" == "main" ]; then
          LAST_MAJOR=$(gh api /repos/$GITHUB_REPOSITORY/branches --paginate --jq .[].name | grep '^release/' | cut -d '/' -f 2 | cut -d '.' -f 1 | sort -n -r | head -n 1)
          NEXT_MAJOR=$(($LAST_MAJOR + 1))
          NEXT_RELEASE="$NEXT_MAJOR.0.0"
        elif [[ "$GITHUB_BASE_REF" = release/* ]]; then
          MAJOR_MINOR=$(echo $GITHUB_BASE_REF | cut -d '/' -f 2)
          LAST_MICRO=$(gh api /repos/keycloak/keycloak/tags --jq .[].name | sort -n -r | grep $MAJOR_MINOR | head -n 1 | cut -d '.' -f 3)
          NEXT_MICRO=$(($LAST_MICRO + 1))
          NEXT_RELEASE="$MAJOR_MINOR.$NEXT_MICRO"
        else
          echo "Ignoring PR to $GITHUB_BASE_REF"
          exit 0
        fi

        LABEL="release/$NEXT_RELEASE"
        echo "Label:      $LABEL"
        echo ""

        ISSUES=$(.github/scripts/pr-find-issues.sh $PR_NUMBER $GITHUB_REPOSITORY)
        for ISSUE in $ISSUES; do
          echo "Issue:    $i"
          gh issue edit $ISSUE -R ${{ github.repository }} --add-label "$LABEL"
        done
      if: github.repository	== 'stianst/keycloak' && github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
